const express = require('express');
const path = require('path');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

app.get('/health', (req, res) => {
  res.json({
    status: 'healthy',
    service: 'Briggs Empire',
    timestamp: new Date().toISOString()
  });
});

app.get('/', (req, res) => {
  res.send(`
    <html>
      <head>
        <title>üè∞ Briggs Empire</title>
        <style>
          body { 
            font-family: Arial, sans-serif; 
            background: linear-gradient(135deg, #ff6b35, #f7931e);
            color: white; 
            text-align: center; 
            padding: 50px;
          }
          .container { 
            max-width: 800px; 
            margin: 0 auto; 
            background: rgba(0,0,0,0.1); 
            padding: 40px; 
            border-radius: 15px;
          }
          h1 { font-size: 3em; margin-bottom: 20px; }
          .status { 
            background: rgba(255,255,255,0.2); 
            padding: 20px; 
            border-radius: 10px; 
            margin: 20px 0;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1>üè∞ Welcome to Briggs Empire</h1>
          <p>AI-Powered Book Creation & Management System</p>
          <div class="status">
            <h3>‚úÖ System Status: ONLINE</h3>
            <p>Server is running successfully!</p>
            <p><strong>Version:</strong> 1.0.0</p>
            <p><strong>Environment:</strong> ${process.env.NODE_ENV || 'production'}</p>
          </div>
          <div class="status">
            <h3>ü§ñ AI Providers Ready</h3>
            <p>OpenAI: ${process.env.OPENAI_API_KEY ? '‚úÖ Configured' : '‚ùå Not Set'}</p>
            <p>Claude: ${process.env.CLAUDE_API_KEY ? '‚úÖ Configured' : '‚ùå Not Set'}</p>
            <p>Gemini: ${process.env.GEMINI_API_KEY ? '‚úÖ Configured' : '‚ùå Not Set'}</p>
          </div>
          <p><em>Ready to build your book empire!</em></p>
        </div>
      </body>
    </html>
  `);
});

app.get('/api/status', (req, res) => {
  res.json({
    message: 'Briggs Empire API Online',
    timestamp: new Date().toISOString(),
    ai_providers: {
      openai: process.env.OPENAI_API_KEY ? 'ready' : 'not configured',
      claude: process.env.CLAUDE_API_KEY ? 'ready' : 'not configured',
      gemini: process.env.GEMINI_API_KEY ? 'ready' : 'not configured'
    }
  });
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(`üè∞ Briggs Empire running on port ${PORT}`);
});
